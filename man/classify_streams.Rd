% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify_streams.R
\name{classify_streams}
\alias{classify_streams}
\title{Classify streams as \emph{wet} or \emph{dry}}
\usage{
classify_streams(data, centers, method = composite_ross,
  labels = FALSE)
}
\arguments{
\item{data}{Formatted data object.}

\item{centers}{The computed centers from the \code{compute_centers} function.}

\item{method}{The classification method to employ. Currently defaults to use the composite ross method.}

\item{lables}{Logical. Whether to include the labels "Wet" and "Dry" to the data depending on if the computed numerical values are less than or greater than one, respectively.}
}
\value{
Returns the numeric classification values or, if labels = TRUE, the labels "Dry" or "Wet" depending on if the numeric values are greater than 1 or less than 1, respectively.
}
\description{
Classify streams as \emph{wet} or \emph{dry} using dissimilarity of the time series data.
}
\examples{

#' # Start by formatting the WWC data
formatted_wwc <- format_data(data = wwc,
                             date_var = "date_time",
                             date_start = "2015-04-01",
                             date_end = "2015-08-30",
                             site_id_var = "site_id",
                             sensor_type_var = "sensor_type",
                             resistor_level = "Resistor",
                             water_temp_level = "Water temp",
                             sensor_reading_var = "sensor_reading")

# Then compute the centers of the wet and dry streams
centers <- compute_centers(data = formatted_wwc,
                           daily_mean_resistor = "daily_mean_resistor")

# Finally, classify the streams and compute their numerical values where values greater than one indicate the stream was dry and values less than one indicate the stream was wet.
classify_streams(data = formatted_wwc, centers = centers)

# Alternatively, you can include the "Wet" and "Dry" labels directly by setting labels = TRUE
classify_streams(data = formatted_wwc, centers = centers, labels = TRUE)

}
